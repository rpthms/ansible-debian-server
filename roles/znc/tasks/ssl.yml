# Tasks to setup SSL for ZNC

- name: "Install certbot"
  #apt: {name: "certbot", state: present}
  apt:
    name: ["certbot", "python3-certbot-dns-digitalocean"]
    state: present

- name: "Setup nginx to allow the LetsEncrypt HTTP challenge"
  template:
    src: "nginx-lets-encrypt.conf.j2"
    dest: "/etc/nginx/sites-available/lets-encrypt.conf"
    owner: root
    group: root
    mode: 0644
  register: nginx_template_result

- name: "Enable the LetsEncrypt nginx config"
  file:
    src: "/etc/nginx/sites-available/lets-encrypt.conf"
    dest: "/etc/nginx/sites-enabled/lets-encrypt.conf"
    state: link
    owner: root
    group: root
  register: nginx_link_result

# Reload only if the nginx config changes
- name: "Reload nginx before starting the LetsEncrypt HTTP challenge"
  systemd:
    name: "nginx"
    state: "reloaded"
  when: nginx_template_result is changed or nginx_link_result is changed

- name: "Create the LetsEncrypt directory structure in the zncd's home directory"
  file:
    path: "{{ item }}"
    state: directory
    owner: zncd
    group: zncd
    mode: 0700
  loop:
    - "/var/lib/znc/lets-encrypt/work"
    - "/var/lib/znc/lets-encrypt/config"
    - "/var/lib/znc/lets-encrypt/logs"

# Temporary task for testing purposes
- name: "Copy the DigitalOcean creds"
  copy:
    src: "digitalocean.ini"
    dest: "/var/lib/znc/lets-encrypt/digitalocean.ini"
    owner: root
    group: root
    mode: 0644

- name: "Generate the LetsEncrypt SSL certificate"
  command:
    argv:
      - "/usr/bin/certbot"
      - "--work-dir"
      - "/var/lib/znc/lets-encrypt/work"
      - "--config-dir"
      - "/var/lib/znc/lets-encrypt/config"
      - "--logs-dir"
      - "/var/lib/znc/lets-encrypt/logs"
      - "--non-interactive"
      - "--agree-tos"
#      - "--email {{ user_email }}"
      - "--register-unsafely-without-email"
      - "--domain"
      - "{{ host_name }}.{{ host_domain }}"
#      - "--webroot"
#      - "--webroot-path /var/www/html"
      - "--dns-digitalocean"
      - "--dns-digitalocean-credentials"
      - "/var/lib/znc/lets-encrypt/digitalocean.ini"
      - "--staging"
      - "certonly"
    creates: "/var/lib/znc/lets-encrypt/config/live/{{ host_name }}.{{ host_domain }}/fullchain.pem"
  become: yes
  become_user: 'zncd'

- name: "Setup the certbot renewal systemd service"
  copy:
    src: "certbot.service"
    dest: "/etc/systemd/system/certbot.service"
    owner: root
    group: root
    mode: 0644

- name: "Create the SSL directory in .znc"
  file:
    path: "/var/lib/znc/.znc/ssl"
    state: directory
    owner: "zncd"
    group: "zncd"
    mode: 0700

- name: "Generate DH params for ZNC"
  openssl_dhparam:
    path: "/var/lib/znc/.znc/ssl/dh.pem"
    state: present
    owner: "zncd"
    group: "zncd"
    size: 2048

- name: "Create symlinks in .znc to the SSL files"
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
    owner: "zncd"
    group: "zncd"
  loop:
    - src: "/var/lib/znc/lets-encrypt/config/live/{{ host_name }}.{{ host_domain }}/fullchain.pem"
      dest: "/var/lib/znc/.znc/ssl/cert.pem"
    - src: "/var/lib/znc/lets-encrypt/config/live/{{ host_name }}.{{ host_domain }}/privkey.pem"
      dest: "/var/lib/znc/.znc/ssl/key.pem"
